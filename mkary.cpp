#include<stdio.h>
#include<stdlib.h>


int main(int argc, char *argv[]){


	int typ=2;	// 1:v1, 2:v2-source
	double xyc=0.0;	// center
	int nml=1;	// direction(normal vector)
	int wvID=0;	// waveform ID
	double th_in=0.0;	// element-wise incident angle [deg]
	double pitch=1.0;
	double wd=0.5;	// element width
	int nele=32;	// number of array elements

	//	source.txt
	char fname1[128]="src.txt";
	FILE *fp1=fopen(fname1,"w");
	fprintf(fp1,"# nsrc (number of source element\n");
	fprintf(fp1," %d\n",nele);
	fprintf(fp1,"# type, xy, wd, nml, wvID, th_in (tpye=1:v1, 2:v2, posi., width, normal, wvfm No, th_in[deg])\n");

	int i,j;
	double xy,A=pitch*(nele-1);
	for(i=0;i<nele;i++){
		xy=pitch*i-0.5*A;
		fprintf(fp1," %d, %lf, %lf, %d, %d, %lf\n",typ,xy,wd,nml,wvID,th_in);
	};
	fprintf(fp1,"\n *** text generated by mkary.cpp ***\n");
	fclose(fp1);


	//	source.txt
	char fname2[128]="array.txt";
	FILE *fp2=fopen(fname2,"w");
	fprintf(fp2,"# nele (number of array elemenets)\n");
	fprintf(fp2," %d\n",nele);
	fprintf(fp2,"# N_meas (Array): number of sequentially excited source\n");

	//		FUll-Matrix Captureing Mode
	int N_meas=nele;
	fprintf(fp2," %d\n",N_meas);

	int actv; 
	double A0=1.0;
	double delay=0.0;
	for(i=0; i<nele; i++){
		fprintf(fp2,"#%d active, A0, delay\n",i);
	for(j=0; j<nele; j++){
		actv=0;	//disabled
		if(i==j) actv=1; //actived elemenet 
		fprintf(fp2," %d, %lf, %lf\n",actv,A0,delay);
	}
	}
	fprintf(fp2,"\n *** text generated by mkary.cpp ***\n");


	fclose(fp2);
	return(0);
};
